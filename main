do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v72=v2(v0(v20,16));if v19 then local v96=v5(v72,v19);v19=nil;return v96;else return v72;end end end);local function v21(v22,v23,v24)if v24 then local v73=(v22/((2 + 0)^(v23-((1872 -(144 + 62)) -((1930 -(72 + 587)) + 394)))))%((1816 -(95 + 1719))^(((v24-1) -(v23-(1609 -(1285 + 323)))) + 1 + 0)) ;return v73-(v73%1) ;else local v74=0 -0 ;local v75;while true do if (v74==(0 + 0)) then v75=(2 -0)^(v23-1) ;return (((v22%(v75 + v75))>=v75) and (1 + 0)) or (0 -0) ;end end end end local function v25()local v38=0 -0 ;local v39;while true do if (v38==0) then v39=v1(v16,v18,v18);v18=v18 + 1 ;v38=1018 -(757 + 53 + 207) ;end if ((1 + 0)==v38) then return v39;end end end local function v26()local v40,v41=v1(v16,v18,v18 + (5 -3) );v18=v18 + 1 + 1 ;return (v41 * (26 + 230)) + v40 ;end local function v27()local v42=0 -0 ;local v43;local v44;local v45;local v46;while true do if (v42==(1 + 0)) then return (v46 * 16777216) + (v45 * ((37146 -13204) + 41594)) + (v44 * (411 -155)) + v43 ;end if (v42==(0 -0)) then v43,v44,v45,v46=v1(v16,v18,v18 + (6 -3) );v18=v18 + (13 -9) ;v42=1;end end end local function v28()local v47=0 -0 ;local v48;local v49;local v50;local v51;local v52;local v53;while true do if (v47==(2 -1)) then v50=602 -(412 + 189) ;v51=(v21(v49,(2535 -(1133 + 553)) -(456 + 7 + 385) ,17 + 3 ) * ((4 -(893 -(657 + 234)))^(19 + 13))) + v48 ;v47=2 + 0 ;end if (v47==(0 -0)) then v48=v27();v49=v27();v47=294 -(182 + 111) ;end if (v47==(1623 -(67 + 1553))) then if (v52==(1952 -(780 + 1172))) then if (v51==(230 -((93 -(22 + 4)) + (1667 -(1205 + 299))))) then return v53 * (646 -(87 + 467 + 92)) ;else v52=1 -(1917 -(934 + 983)) ;v50=0 + 0 ;end elseif (v52==(169 + 1878)) then return ((v51==((560 + 223) -(417 + 29 + 337))) and (v53 * (1/(0 -0)))) or (v53 * NaN) ;end return v8(v53,v52-((1465 -(1231 + 153)) + 563 + 379) ) * (v50 + (v51/((1484 -(136 + 1346))^(22 + 30)))) ;end if (v47==(1762 -(1468 + 292))) then v52=v21(v49,1297 -(219 + 1057) ,31);v53=((v21(v49,32)==1) and  -(460 -(44 + 415))) or ((2120 -(526 + 9)) -(235 + 1349)) ;v47=3 + 0 ;end end end local function v29(v30)local v54=(0 -0) + 0 ;local v55;local v56;while true do if (((2203 -(721 + 738)) -(569 + 172))==v54) then return v6(v56);end if (0==v54) then v55=nil;if  not v30 then v30=v27();if (v30==(0 + 0)) then return "";end end v54=(840 -(12 + 827)) -0 ;end if (v54==(1 -0)) then v55=v3(v16,v18,(v18 + v30) -(1 + 0) );v18=v18 + v30 ;v54=1 + 1 ;end if (v54==(59 -(25 + 32))) then v56={};for v97=1691 -(1132 + 558) , #v55 do v56[v97]=v2(v1(v3(v55,v97,v97)));end v54=1 + 1 + 1 ;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v57=0;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v57==1) then local v86=0;local v87;while true do if (v86~=(1212 -(79 + 1133))) then else v87=1278 -(649 + 629) ;while true do if (v87~=0) then else local v117=0;while true do if (v117~=(913 -(861 + 52))) then else v61={v58,v59,nil,v60};v62=v27();v117=1;end if (v117~=(470 -(428 + 41))) then else v87=1;break;end end end if (v87==(1 + 0)) then v63={};v57=1990 -(1373 + 615) ;break;end end break;end end end if (v57==(6 -3)) then local v88=0;while true do if (v88==0) then for v104=1,v27() do v59[v104-(1 + 0) ]=v33();end for v106=1,v27() do v60[v106]=v27();end v88=1 + 0 ;end if (1~=v88) then else return v61;end end end if (v57==(2 + 0)) then local v89=0 + 0 ;while true do if (v89==1) then for v108=1 -0 ,v27() do local v109=0 + 0 ;local v110;local v111;local v112;while true do if (v109==(1 + 0)) then v112=nil;while true do if ((0 -0)==v110) then local v122=0 -0 ;local v123;while true do if (v122~=(0 + 0)) then else v123=0;while true do if (v123~=0) then else local v131=0;while true do if (v131==1) then v123=2 -1 ;break;end if (v131==0) then v111=123 -(82 + 41) ;v112=nil;v131=1;end end end if (v123~=1) then else v110=1;break;end end break;end end end if (v110==(1 + 0)) then while true do if ((0 + 0)~=v111) then else v112=v25();if (v21(v112,1,1)==0) then local v124=0 + 0 ;local v125;local v126;local v127;local v128;local v129;local v130;while true do if ((0 -0)~=v124) then else v125=0;v126=nil;v124=4 -3 ;end if (v124~=(1 + 0)) then else v127=nil;v128=nil;v124=4 -2 ;end if (v124~=(5 -3)) then else v129=nil;v130=nil;v124=7 -4 ;end if (v124==3) then while true do if (v125==(870 -(252 + 617))) then local v259=584 -(499 + 85) ;while true do if (v259==0) then v128=nil;v129=nil;v259=2 -1 ;end if (v259==1) then v125=2;break;end end end if (v125==(188 -(134 + 54))) then local v260=0 + 0 ;while true do if (v260~=0) then else v126=0 -0 ;v127=nil;v260=1 -0 ;end if ((1 + 0)~=v260) then else v125=4 -3 ;break;end end end if (v125==2) then v130=nil;while true do if (v126==1) then local v290=0 + 0 ;while true do if (1~=v290) then else v126=1 + 1 ;break;end if (0~=v290) then else local v347=0;while true do if (v347~=(19 -(17 + 1))) then else v290=3 -2 ;break;end if (v347~=0) then else v129=nil;v130=nil;v347=1 + 0 ;end end end end end if (v126~=(1882 -(1278 + 604))) then else local v291=0;while true do if (v291==(3 -2)) then v126=4 -3 ;break;end if (v291~=(0 -0)) then else local v348=0;while true do if (v348~=1) then else v291=1;break;end if (v348==(0 -0)) then v127=0;v128=nil;v348=1538 -(114 + 1423) ;end end end end end if (v126==(1383 -(1097 + 284))) then while true do if (v127==(0 -0)) then local v349=263 -(258 + 5) ;local v350;local v351;while true do if (v349==(1063 -(894 + 169))) then v350=0;v351=nil;v349=1;end if (v349==(1 + 0)) then while true do if (v350==(0 -0)) then v351=0 + 0 ;while true do if (v351~=(1584 -(748 + 836))) then else local v416=1771 -(1209 + 562) ;while true do if (0==v416) then local v423=0;while true do if (v423==1) then v416=462 -(23 + 438) ;break;end if (v423==0) then v128=v21(v112,2 -0 ,3);v129=v21(v112,8 -4 ,11 -5 );v423=3 -2 ;end end end if (v416==(2 -1)) then v351=132 -(27 + 104) ;break;end end end if (v351==(2 -1)) then v127=1;break;end end break;end end break;end end end if (v127==(2 + 0)) then local v352=1931 -(524 + 1407) ;while true do if ((2 -1)==v352) then v127=3;break;end if (v352==(0 -0)) then local v390=0 -0 ;while true do if (v390==(0 + 0)) then if (v21(v129,1 -0 ,694 -(259 + 434) )==1) then v130[2]=v63[v130[2]];end if (v21(v129,2,1454 -(1259 + 193) )==(1643 -(298 + 1344))) then v130[3]=v63[v130[3]];end v390=1 + 0 ;end if ((390 -(170 + 219))==v390) then v352=1 + 0 ;break;end end end end end if (v127==(11 -8)) then if (v21(v129,3,5 -2 )==(1 + 0)) then v130[4]=v63[v130[1863 -(736 + 1123) ]];end v58[v108]=v130;break;end if (v127==1) then local v354=0 -0 ;local v355;local v356;while true do if (v354==(0 + 0)) then v355=0 -0 ;v356=nil;v354=2 -1 ;end if (v354~=(748 -(641 + 106))) then else while true do if (v355==(1940 -(715 + 1225))) then v356=0 -0 ;while true do if (v356==0) then local v417=0 -0 ;local v418;while true do if (v417==(0 + 0)) then v418=0;while true do if (1~=v418) then else v356=1;break;end if (v418==(0 -0)) then local v424=0;while true do if (v424==1) then v418=1;break;end if (v424==(49 -(43 + 6))) then v130={v26(),v26(),nil,nil};if (v128==0) then local v428=931 -(150 + 781) ;local v429;while true do if (v428==(0 -0)) then v429=0 -0 ;while true do if (v429==0) then v130[1043 -(997 + 43) ]=v26();v130[1 + 3 ]=v26();break;end end break;end end elseif (v128==(2 -1)) then v130[104 -(95 + 6) ]=v27();elseif (v128==(1 + 1)) then v130[1552 -(178 + 1371) ]=v27() -(2^16) ;elseif (v128~=3) then else local v434=0 + 0 ;local v435;local v436;while true do if (v434==1) then while true do if (v435==0) then v436=0 -0 ;while true do if ((0 + 0)==v436) then v130[3]=v27() -(2^16) ;v130[4]=v26();break;end end break;end end break;end if (v434==0) then v435=0;v436=nil;v434=1;end end end v424=1;end end end end break;end end end if (v356==1) then v127=2;break;end end break;end end break;end end end end break;end end break;end end break;end end end break;end end break;end end break;end if (0==v109) then v110=0 + 0 ;v111=nil;v109=1;end end end v57=1 + 2 ;break;end if (v89==0) then for v113=2 -1 ,v62 do local v114=0 -0 ;local v115;local v116;while true do if (v114==(1170 -(1154 + 15))) then if (v115==(1402 -(192 + 1209))) then v116=v25()~=(0 + 0) ;elseif (v115==2) then v116=v28();elseif (v115~=(205 -(78 + 124))) then else v116=v29();end v63[v113]=v116;break;end if ((0 + 0)~=v114) then else v115=v25();v116=nil;v114=1;end end end v61[1045 -(951 + 91) ]=v25();v89=1;end end end if (v57==0) then local v90=0;local v91;while true do if (v90~=0) then else v91=838 -(228 + 610) ;while true do if (v91==0) then v58={};v59={};v91=1;end if (v91~=(1 + 0)) then else v60={};v57=1;break;end end break;end end end end end local function v34(v35,v36,v37)local v64=v35[1];local v65=v35[2];local v66=v35[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v76=v64;local v77=v65;local v78=v66;local v79=v32;local v80={};local v81={};local v82={};for v92=0 + 0 ,v70 do if (((6522 -4651)<2168) and (v92>=v78)) then v80[v92-v78 ]=v69[v92 + 1 + 0 ];else v82[v92]=v69[v92 + (2 -1) ];end end local v83=(v70-v78) + 1 ;local v84;local v85;while true do local v93=0 -0 ;local v94;while true do if ((v93==(1877 -((1136 -(103 + 424)) + 1268))) or ((3174 + 164)==((51245 -33736) -(7539 + 5662)))) then v94=1968 -(1131 + 837) ;while true do if ((v94==((0 -0) -0)) or ((2731 + 1800)<(749 -(1189 -(349 + 523))))) then local v118=(0 -0) -0 ;while true do if (((5456 -(933 + (753 -521)))>569) and (v118==(0 + (1390 -(1081 + 309))))) then v84=v76[v67];v85=v84[3 -2 ];v118=1255 -(666 + 588) ;end if (((4612 -(12 + 703))>(3314 -(743 + 655))) and (v118==(1 + 0))) then v94=2 -1 ;break;end end end if ((((2487 + 2021) -(213 + 687))>(2540 -(90 + 78))) and (v94==(1 + 0))) then if ((v85<=26) or ((60 + 3841)<=(3127 -(1731 + 21)))) then if ((v85<=(6 + 6)) or ((1131 -(285 + (968 -592)))>=(13553 -9614))) then if ((v85<=(744 -(589 + 97 + 53))) or ((1344 + 698 + 1586)<(3573 -(759 + 621)))) then if ((943==(390 + 553)) and (v85<=2)) then if ((v85<=(0 + 0)) or ((10516 -6310)<(4311 -((1410 -(148 + 485)) + 342)))) then local v132=0 -0 ;local v133;local v134;local v135;local v136;while true do if (((2 -1)==v132) or (4359<=300)) then v135=nil;v136=nil;v132=31 -(17 + 12) ;end if ((4632==(3498 + 1134)) and (v132==(0 -(229 -(175 + 54))))) then v133=1261 -(817 + 444) ;v134=nil;v132=1 + 0 ;end if ((823<(1509 + 657)) and (v132==(1 + 1))) then while true do if ((v133==0) or ((86 + 36)>(3106 + 768))) then v134=v84[1 + 1 ];v135={v82[v134](v13(v82,v134 + (4 -3) ,v68))};v133=1 + (0 -0) ;end if ((v133==(1 + 0)) or ((2716 -(130 + 764 + 304))>4281)) then v136=0 -0 ;for v287=v134,v84[1 + 3 ] do local v288=1259 -(251 + 1008) ;local v289;while true do if ((v288==(0 + (188 -(108 + 80)))) or (1900<=1521)) then v289=0 + 0 ;while true do if ((v289==(0 -0)) or (3145<(652 + 1010))) then v136=v136 + (1976 -(1320 + 655)) ;v82[v287]=v135[v136];break;end end break;end end end break;end end break;end end elseif ((v85>(1 -0)) or ((1062 -325)<=443)) then local v150=534 -(515 + 19) ;local v151;local v152;local v153;while true do if (((224 -(210 + 13))==v150) or (643>=(2282 -1420))) then local v261=(554 -(44 + 65)) -(76 + 369) ;while true do if ((v261==(791 -(34 + 44 + 712))) or ((1782 + (3057 -(73 + 1836)))<=(1614 -((1061 -687) + 794)))) then v150=2 + 0 ;break;end if ((v261==(272 -(197 + 75))) or ((6924 -2760)<2248)) then v153={};v152=v10({},{__index=function(v292,v293)local v317=0 -(0 -0) ;local v318;local v319;while true do if (((6615 -3317)<=(101 + 4 + 4829)) and (v317==1)) then while true do if (((7041 -3598)<4565) and (v318==(565 -((1046 -574) + 93)))) then local v392=0 + 0 ;local v393;while true do if (((0 -0)==v392) or ((2134 + 2701)<=(3250 -(398 + 50)))) then v393=0 + 0 ;while true do if (((1192 + (4558 -3483))<(4265 -(48 + 618))) and (v393==0)) then v319=v153[v293];return v319[1][v319[2]];end end break;end end end end break;end if (((1407 -(777 + 154 + 476))==v317) or ((1457 + 2884)<(202 + 2323))) then v318=1604 -(472 + 1132) ;v319=nil;v317=1 -0 ;end end end,__newindex=function(v292,v293,v294)local v320=0 -0 ;local v321;while true do if ((v320==0) or (2070==(1011 + (788 -(205 + 83))))) then v321=v153[v293];v321[2 -1 ][v321[2 + 0 ]]=v294;break;end end end});v261=3 -2 ;end end end if ((v150==((229 -(33 + 196)) + 0)) or ((88 -57)>(977 + 1871))) then v151=v77[v84[1963 -(406 + 1554) ]];v152=nil;v150=2 -1 ;end if ((v150==(2 + 0)) or (2402>=(5551 -(889 + 257)))) then for v279=470 -(355 + 114) ,v84[1976 -(374 + 1598) ] do local v280=318 -(272 + 46) ;local v281;while true do if (((10759 -6755)>1509) and (1==v280)) then if ((546<=(3884 -(677 + 12))) and (v281[1 + 0 ]==(30 + (1301 -(839 + 454))))) then v153[v279-(2 -1) ]={v82,v281[1539 -(1486 + 50) ]};else v153[v279-(1 -(0 + 0)) ]={v36,v281[3]};end v81[ #v81 + (366 -(252 + (1604 -(624 + 867)))) ]=v153;break;end if (((4474 -3157)<(2667 -940)) and (v280==(1834 -(467 + 1367)))) then local v323=0;while true do if (((13984 -10401)<=3877) and (v323==((1 -0) -0))) then v280=1;break;end if (((501 + 853)<(1664 + 97)) and (v323==(0 -0))) then v67=v67 + (1 -0) ;v281=v76[v67];v323=(524 -(134 + 389)) + 0 ;end end end end end v82[v84[2 + 0 ]]=v34(v151,v152,v37);break;end end else v82[v84[5 -3 ]]();end elseif (((2755 -(89 + 304))==(8318 -5956)) and (v85<=3)) then if (((1334 -738)<(5423 -(623 + 292))) and  not v82[v84[2]]) then v67=v67 + 1 ;else v67=v84[3 + (1618 -(1548 + 70)) ];end elseif (((5346 -2657)==(6313 -3624)) and (v85==4)) then v82[v84[2 + (1316 -(1149 + 167)) ]][v84[1887 -(492 + 1392) ]]=v82[v84[1 + 2 + 1 ]];else local v157=0 -0 ;local v158;local v159;local v160;local v161;local v162;while true do if ((v157==(0 -0)) or (735>4272)) then v158=0;v159=nil;v157=3 -2 ;end if (((1599 -1268)<(901 + 1170)) and (1==v157)) then v160=nil;v161=nil;v157=1878 -(380 + 1496) ;end if ((v157==(1220 -(1087 + 131))) or ((1466 -(47 + (468 -294)))<=((983 + 587) -(562 + 572)))) then v162=nil;while true do if (((3723 -(376 + 362))<=(3290 + 1137)) and (v158==(317 -(20 + 297)))) then v159=v84[6 -4 ];v160,v161=v79(v82[v159](v13(v82,v159 + 1 ,v84[493 -(201 + 289) ])));v158=1;end if (((660 + 226)<939) and (v158==1)) then v68=(v161 + v159) -(1711 -(21 + 832 + 857)) ;v162=1041 -(769 + 272) ;v158=1909 -((2502 -1063) + 468) ;end if (((83 + 723)>(98 + 18)) and ((3 -1)==v158)) then for v324=v159,v68 do local v325=0 + 0 ;local v326;local v327;while true do if ((3840>((6445 -(176 + 1275)) -(51 + 1439))) and (v325==1)) then while true do if (((1716 -(660 + 306))<=(2557 -588)) and (v326==(0 + 0))) then v327=0 -0 ;while true do if ((v327==(882 -(134 + 748))) or ((883 -547)>(2174 -(208 + 522)))) then v162=v162 + 1 ;v82[v324]=v160[v162];break;end end break;end end break;end if (((2998 -(767 + 715))>=(96 + 951 + 60)) and (v325==0)) then v326=0 + 0 ;v327=nil;v325=1 -0 ;end end end break;end end break;end end end elseif (((17483 -13042)>=1998) and (v85<=(1 + 7))) then if ((v85<=(1310 -(217 + 1087))) or ((2415 -(51 + 100 + 1597))==((49352 -34716) -9681))) then v82[v84[2 + 0 ]]=v84[3]~=0 ;elseif ((v85>(16 -9)) or ((8400 -4626)==1161)) then local v163=895 -((1721 -(495 + 1059)) + 728) ;local v164;while true do if (((89 + 222)<=(253 + 2131)) and (v163==(0 -0))) then v164=v84[2 + 0 ];v82[v164]=v82[v164]();break;end end else local v165=0 -0 ;local v166;local v167;while true do if ((566<(2182 + 615)) and (v165==(1 -0))) then while true do if ((((5024 -1084) -(4294 -1158))<(163 + (3663 -(397 + 727)))) and (v166==(0 -0))) then v167=v84[2];do return v13(v82,v167,v68);end break;end end break;end if ((0==v165) or ((1550 + 1510)<=(2873 -2083))) then v166=1214 -(740 + 474) ;v167=nil;v165=3 -2 ;end end end elseif ((3142>999) and (v85<=(30 -20))) then if (((3732 -2394)<=3942) and (v85==(3 + 6))) then v82[v84[2]]=v82[v84[3 + 0 ]] -v84[4] ;else v82[v84[6 -4 ]]=v82[v84[3 + 0 ]][v84[(3 -2) + 3 ]];end elseif ((v85==(503 -((1028 -768) + 232))) or ((1950 -(4 + 9))>(3706 + 965))) then v67=v84[2 + 1 ];else local v172=0;local v173;local v174;while true do if ((675==(1691 -1016)) and (v172==((434 + 665) -(497 + 602)))) then v173=0 + 0 ;v174=nil;v172=1;end if (((4277 -(1696 + 153))<=(3897 + 656)) and (v172==1)) then while true do if ((v173==0) or ((1291 + 3088)>=4484)) then local v297=0 -0 ;while true do if (((3779 -1495)<=(613 + 3942)) and (v297==0)) then v174=v84[2 + 0 ];v68=(v174 + v83) -(663 -(484 + 178)) ;v297=1;end if ((v297==1) or (((12577 -6518) -(460 + 706))==((5598 -3651) -820))) then v173=1 + 0 ;break;end end end if ((v173==(1984 -(883 + 1100))) or ((5717 -(483 + 437))<4629)) then for v328=v174,v68 do local v329=0;local v330;local v331;while true do if ((v329==(1 + (0 -0))) or (((3023 -(624 + 149)) -1739)>4551)) then while true do if ((v330==((1207 + 61) -(835 + 433))) or ((5245 -(219 + 1510))<(1606 -(219 + 143 + 587)))) then v331=v80[v328-v174 ];v82[v328]=v331;break;end end break;end if (((1917 -(1826 + 91))==v329) or (1375>3274)) then v330=0 -0 ;v331=nil;v329=1 -0 ;end end end break;end end break;end end end elseif ((v85<=((1132 -(76 + 159)) -(618 + 260))) or ((2285 + 930)<(1004 -(94 + 229)))) then if ((v85<=(7 + 8)) or ((11907 -8500)<=(1635 -853))) then if (((7843 -(9671 -4945))<=(11220 -6572)) and (v85<=(45 -32))) then v82[v84[2]][v84[3]]=v84[(1389 -(498 + 886)) -1 ];elseif (((2163 -(99 + 401))>=(3905 -(4049 -(1016 + 165)))) and (v85>14)) then local v175=(80 -49) -(21 + 10) ;local v176;local v177;while true do if (((0 + (0 -0))==v175) or ((356 -218)>=(13710 -9717))) then v176=0 -0 ;v177=nil;v175=1 + 0 ;end if ((v175==(887 -(138 + 748))) or ((4223 -2043)>=(7761 -3753))) then while true do if (((3113 -1300)>(2637 -1150)) and (v176==0)) then v177=v84[2 + 0 ];v82[v177]=v82[v177](v82[v177 + (37 -(4 + 8 + (44 -20))) ]);break;end end break;end end else local v178=0;local v179;local v180;local v181;while true do if ((2733>=(2312 -1081)) and (v178==(304 -(221 + 82)))) then v181=v82[v179 + 2 + 0 ];if ((2612>(2342 -(334 + 1292))) and (v181>(0 -0))) then if (((2698 + 42)>=(1248 -(127 + 30))) and (v180>v82[v179 + 1 ])) then v67=v84[3];else v82[v179 + ((2 + 4) -3) ]=v180;end elseif ((v180<v82[v179 + (1 -0) ]) or ((4676 -(646 + 151 + 950))==(9501 -5859))) then v67=v84[1 + 2 ];else v82[v179 + 3 ]=v180;end break;end if ((v178==(0 -0)) or ((7253 -2758)==(2742 -1070))) then local v267=768 -(264 + 341 + 163) ;while true do if (((0 + 0)==v267) or ((987 + 58)>=(1523 -458))) then v179=v84[2];v180=v82[v179];v267=980 -(904 + 75) ;end if ((v267==(118 -(79 + 38))) or ((4252 -((694 -(151 + 58)) + 116))<=3222)) then v178=1 + 0 ;break;end end end end end elseif (((4084 -1152)<((9200 -6439) + 1421)) and (v85<=17)) then if (((1754 -(87 + 549))>(1554 -(395 + 1121))) and (v85>(557 -(149 + 392)))) then if ((((11285 -(838 + 659)) -5645)>(366 -217)) and (v82[v84[1 + (1 -0) ]]==v82[v84[2 + 2 ]])) then v67=v67 + (2 -1) ;else v67=v84[1 + 2 ];end else local v182=1480 -(766 + 714) ;local v183;local v184;local v185;while true do if (((3114 + 614)>(2711 -(7 + 27))) and (v182==1)) then v185=nil;while true do if ((v183==0) or ((544 + (89 -66))>(188 + 591))) then local v302=0 -0 ;while true do if ((v302==(0 + 0)) or ((5601 -(290 + 617))==(2473 -930))) then v184=v84[2];v185=v82[v184];v302=1;end if ((810<=(828 + 3164)) and (v302==(1 + 0))) then v183=1 + 0 ;break;end end end if (((3780 -(211 + 78))>=(2185 -(291 + 948))) and ((1 + (0 -0))==v183)) then for v336=v184 + (2 -1) ,v84[(701 -(478 + 222)) + 2 ] do v7(v185,v82[v336]);end break;end end break;end if (((4732 -(1206 + 582))>(136 + 1670)) and (v182==(252 -(174 + 78)))) then v183=0;v184=nil;v182=1 -0 ;end end end elseif ((v85==18) or ((3322 -(39 + 94))==((3144 -(1163 + 125)) -(259 + (896 -(303 + 458)))))) then local v186=533 -(295 + 238) ;local v187;while true do if (((1474 + 309)==1783) and ((1672 -(1364 + 308))==v186)) then v187=v84[2 + 0 ];do return v82[v187](v13(v82,v187 + 1 + 0 ,v68));end break;end end else v82[v84[2 + 0 ]]=v84[8 -5 ]/v84[4] ;end elseif (((529 + 2738)>(4437 -3398)) and (v85<=22)) then if ((v85<=(6 + (36 -22))) or ((15866 -11844)<(1578 + 406))) then v82[v84[(1701 -(514 + 829)) -(237 + 119) ]]={};elseif ((v85==21) or ((436 + 652)>(6281 -(960 + 656)))) then do return;end else local v189=0;local v190;while true do if ((v189==(0 -(109 -(40 + 69)))) or ((2251 + 536)>=4321)) then v190=v84[1092 -(92 + 998) ];v82[v190](v13(v82,v190 + 1 + 0 ,v84[1262 -(569 + 690) ]));break;end end end elseif ((v85<=(41 -17)) or ((2316 + 1436)>(4960 -(23 + 63)))) then if ((v85>(591 -(103 + 465))) or ((295 + 603)>((4806 + 266) -1714))) then local v191=0;local v192;local v193;while true do if ((v191==((620 -(139 + 479)) -(1416 -(634 + 781)))) or (1975>=((11537 -(786 + 463)) -7336))) then while true do if ((v192==(1993 -(330 + 1663))) or ((3991 + 915)<(2260 + 493))) then v193=v84[4 -2 ];do return v13(v82,v193,v193 + v84[1 + 2 ] );end break;end end break;end if ((v191==0) or ((166 + 114)>=2965)) then v192=0;v193=nil;v191=1;end end else local v194=0 + 0 ;local v195;local v196;local v197;local v198;local v199;local v200;while true do if ((v194==(858 -(484 + 371))) or ((1820 -((3134 -2048) + (668 -(40 + 29))))>(898 + 1552))) then while true do if ((v195==2) or (((3204 -(155 + 17)) -(214 + 227))>=(1836 + 2175))) then v200=nil;while true do if ((v196==0) or ((7821 -(3257 + 1667))<=(834 + 1183))) then local v362=(245 + 113) -(16 + 342) ;while true do if (((2 + 2710)<(5966 -2954)) and (v362==1)) then v196=2 -1 ;break;end if ((v362==(0 + 0)) or ((5050 -(435 + 424))==(7226 -2407))) then v197=v84[2 + 0 ];v198,v199=v79(v82[v197](v82[v197 + 1 ]));v362=1;end end end if (((3858 -1853)>=757) and (v196==1)) then local v363=0;local v364;while true do if (((8580 -6479)<(6005 -(916 + (1639 -(965 + 539))))) and (v363==(1175 -(890 + 285)))) then v364=209 -(6 + 8 + 195) ;while true do if ((v364==(133 -(74 + 58))) or (2438<=1248)) then v196=(4 -2) + (0 -0) ;break;end if (((1728 -(229 + 165))<=3361) and (v364==0)) then local v402=0 + 0 ;while true do if ((v402==(1 -0)) or (((2790 -(336 + 432)) + (4450 -(224 + 1589)))<(7506 -5601))) then v364=1 -0 ;break;end if (((2034 -(136 + 68))<=((8628 + 3555) -8840)) and (v402==0)) then v68=(v199 + v197) -(639 -(154 + (691 -(90 + 117)))) ;v200=1393 -(1298 + 95) ;v402=1;end end end end break;end end end if (((3611 -(79 + 1788))>(350 + 1110)) and (v196==(1511 -(602 + 907)))) then for v369=v197,v68 do local v370=0 -0 ;local v371;while true do if (((2285 -882)<(17948 -13272)) and (v370==(0 + 0))) then v371=(196 -132) -(44 + (44 -24)) ;while true do if (((0 -0)==v371) or ((6013 -(5698 -(1231 + 763)))>(4550 -(97 + 840)))) then v200=v200 + (441 -(69 + 342 + 29)) ;v82[v369]=v198[v200];break;end end break;end end end break;end end break;end if ((v195==1) or ((1798 -(790 + 476))>(2532 -(846 + 951)))) then local v304=0 -0 ;while true do if (((0 + 0 + 0)==v304) or (112==(183 -95))) then v198=nil;v199=nil;v304=1 + (1556 -(311 + 1245)) ;end if ((v304==(1 + 0)) or ((1324 + 5)>(4472 -(772 + 151)))) then v195=8 -6 ;break;end end end if ((v195==(0 + 0)) or (3824<=(1216 + 1186))) then v196=0;v197=nil;v195=1;end end break;end if (((4442 -(182 + 414))>=(2228 -(165 + 80))) and (v194==2)) then v199=nil;v200=nil;v194=11 -8 ;end if (((5088 -3476)<=(3464 -(381 + 832))) and (v194==(0 -0))) then v195=909 -(71 + 838) ;v196=nil;v194=1 + 0 ;end if ((v194==1) or ((167 + (512 -298))==367)) then v197=nil;v198=nil;v194=(2589 -1527) -(951 + 109) ;end end end elseif ((v85==(60 -35)) or (3696<(2156 + 12))) then v82[v84[1 + 1 ]]=v82[v84[1865 -(1636 + 226) ]]%v84[7 -(9 -6) ] ;else v82[v84[7 -5 ]]=v84[3 + 0 ];end elseif ((3981>=(2199 + 260)) and (v85<=(310 -(208 + 62)))) then if ((v85<=(1034 -(148 + 853))) or ((3 + 237 + 460)>=4437)) then if ((v85<=(336 -(83 + 86 + 138))) or ((2426 + 1980)==(2698 -1359))) then if (((99 + 813)==(2908 -(647 + 1349))) and (v85<=(19 + 8))) then v82[v84[739 -(404 + 333) ]][v82[v84[12 -9 ]]]=v82[v84[14 -10 ]];elseif ((2899<=(2702 + 973)) and (v85==(43 -(22 -7)))) then if (((4025 -1780)>=(1845 + 194)) and (v82[v84[2]]==v84[17 -13 ])) then v67=v67 + (1398 -(1193 + 204)) ;else v67=v84[3];end else local v204=0;local v205;local v206;while true do if (((1399 -(480 + 387))==532) and (v204==((1 + 1) -1))) then while true do if ((v205==0) or ((5832 -2237)==(6095 -1249))) then v206=v84[5 -3 ];v82[v206](v82[v206 + 1 + 0 ]);break;end end break;end if (((6064 -(486 + 1241))<=((5532 + 4552) -5099)) and (v204==(0 + 0))) then v205=1995 -(590 + (4190 -2785)) ;v206=nil;v204=1973 -(211 + 1761) ;end end end elseif ((v85<=(1265 -(593 + 641))) or (1330>=(4666 -1087))) then if ((v85>(20 + 10)) or ((5558 -(70 + 689))>4825)) then local v207=(0 -0) -0 ;local v208;local v209;local v210;local v211;while true do if (((2219 + 244)>(3481 -(774 + 397))) and (v207==(0 + 0))) then v208=0 + 0 ;v209=nil;v207=1;end if (((2 + 0)==v207) or ((9126 -(23550 -17391))<(1641 -(238 + 2)))) then while true do if ((v208==((1550 -(467 + 1082)) -(218 -(202 + 16)))) or (((458 + 1101) -(628 + 262))==(4692 -(813 + 1929)))) then v211=v84[4 -1 ];for v337=1 + 0 ,v211 do v210[v337]=v82[v209 + v337 ];end break;end if (((555 + 1646)<(6076 -2228)) and (v208==0)) then v209=v84[2 + 0 + (0 -0) ];v210=v82[v209];v208=1;end end break;end if (((1 + 0)==v207) or ((988 -533)<=(520 -(1924 -(30 + 1747))))) then v210=nil;v211=nil;v207=3 -1 ;end end else v82[v84[1491 -(179 + 1166 + 144) ]]= #v82[v84[8 -5 ]];end elseif ((v85>(28 + 4)) or ((4749 -(522 + 982 + 354))<(192 + 613))) then if ((v84[2 + 0 ]==v82[v84[6 -2 ]]) or ((2409 -1015)>=(3618 -(985 + 90)))) then v67=v67 + 1 ;else v67=v84[(3 -2) + 2 ];end else v82[v84[2 + 0 ]]=v34(v77[v84[3]],nil,v37);end elseif (((546 -297)<(5475 -(439 + 467))) and (v85<=(4 + 32))) then if ((v85<=(203 -(138 + 31))) or ((3305 -1378)==(6625 -2209))) then local v143=0 -0 ;local v144;local v145;local v146;local v147;local v148;while true do if (((1072 -419)<4920) and (v143==(1 + 0))) then v146=nil;v147=nil;v143=4 -2 ;end if ((2011>((1501 -969) + 621)) and (v143==(0 + (0 -0)))) then v144=(1309 -(486 + 823)) -0 ;v145=nil;v143=1;end if (((638 + 3894)>=((5139 -3668) -(4 + 608))) and (v143==(1250 -((2357 -1569) + 460)))) then v148=nil;while true do if ((v144==1) or (2456>(1618 + 3175))) then local v282=0 -0 ;while true do if ((((5537 -2946) -(140 + 1))<=(5734 -(227 + 1429))) and (v282==1)) then v144=1094 -(709 + 383) ;break;end if (((105 + 1887)==1992) and ((301 -(243 + 58))==v282)) then v147=nil;v148=nil;v282=1;end end end if ((v144==(0 + 0)) or ((697 + 1198)>(17168 -12833))) then v145=0 -0 ;v146=nil;v144=(46 -(18 + 27)) + 0 ;end if ((v144==(4 -(4 -2))) or ((4391 -(132 + 114))<(449 + (2637 -(157 + 897))))) then while true do if (((2230 -(2496 -(1146 + 227)))==(209 + 898)) and (v145==(2 + 0))) then if ((v147>(0 + 0)) or ((230 + 490)>=(788 + 1782))) then if (((11144 -(15072 -8724))>(5334 -2479)) and (v148<=v82[v146 + (2 -(736 -(373 + 362))) ])) then local v379=0;while true do if (((894 + 956)<(4496 -(1073 + 308))) and (v379==(0 + 0))) then v67=v84[3];v82[v146 + 3 + 0 ]=v148;break;end end end elseif ((v148>=v82[v146 + (4 -3) ]) or (2089>=(1837 + 2415))) then local v380=0 + 0 ;local v381;while true do if (((1661 -650)<=4783) and (v380==(0 -0))) then v381=0 -0 ;while true do if ((v381==(1324 -(902 + 422))) or (3145<2081)) then v67=v84[3];v82[v146 + 3 + (1418 -(1131 + 287)) ]=v148;break;end end break;end end end break;end if (((3028 + 17)<=(5211 -(850 + 87))) and (v145==(0 -0))) then local v340=0;while true do if (((0 + 0)==v340) or ((66 + 200)>(12108 -7287))) then local v372=(0 + 0) -0 ;while true do if (((0 -0)==v372) or (762==(3695 + 726))) then v146=v84[675 -(296 + 377) ];v147=v82[v146 + (2 -0) ];v372=986 -((1459 -(912 + 409)) + 847) ;end if ((v372==1) or (2199>=(5854 -(950 + 387 + 430)))) then v340=2 -1 ;break;end end end if (((703 + 53)<1552) and (v340==((57 + 12) -(36 + 32)))) then v145=176 -((208 -108) + 75) ;break;end end end if (((1 -0)==v145) or ((5830 -(282 + 867))>=(6749 -(455 + 1532)))) then local v341=653 -(432 + 221) ;while true do if (((893 + 390)<(4275 -2162)) and (((0 -0) -0)==v341)) then v148=v82[v146] + v147 ;v82[v146]=v148;v341=2 -1 ;end if (((500 + 384)<=(4319 -(38 + 412))) and (v341==((121 -53) -(48 + (29 -10))))) then v145=8 -6 ;break;end end end end break;end end break;end end elseif (((1321 + 1204)>(1469 -1003)) and (v85>(86 -51))) then v82[v84[2 -0 ]]=v36[v84[11 -8 ]];else local v216=0;local v217;local v218;local v219;local v220;local v221;while true do if ((4705>=(6412 -3166)) and (v216==(1 + 1))) then v221=nil;while true do if ((v217==(0 -0)) or ((1180 + 2722)==1889)) then local v309=0 + 0 ;while true do if (((8205 -6504)>((1468 -(656 + 790)) -11)) and (v309==(1440 -(822 + 84 + 533)))) then v217=3 -2 ;break;end if (((10736 -6723)>(3179 -(545 + 343))) and (v309==(1973 -(1187 + 786)))) then v218=v84[1 + 1 ];v219,v220=v79(v82[v218](v13(v82,v218 + (913 -(408 + 504)) ,v68)));v309=4 -3 ;end end end if ((4552==(5770 -(591 + 627))) and (v217==(684 -(496 + (427 -240))))) then local v310=0;while true do if ((1605>(500 -359)) and (v310==(0 -0))) then v68=(v220 + v218) -(2 -(2 -1)) ;v221=0 -0 ;v310=2 -1 ;end if ((v310==((1284 -(229 + 1054)) + 0)) or (4244<=4131)) then v217=2 + 0 ;break;end end end if ((v217==(4 -2)) or ((196 + 1834)>(591 + 1751))) then for v342=v218,v68 do local v343=0 + 0 ;local v344;while true do if (((10549 -7113)==(8607 -5171)) and (v343==(0 -(0 + 0)))) then v344=(1030 -(188 + 842)) + 0 ;while true do if (((0 + 0)==v344) or ((5022 -(660 + 64 + 461))<(2796 -(444 + 1218)))) then v221=v221 + 1 + 0 ;v82[v342]=v219[v221];break;end end break;end end end break;end end break;end if ((v216==(1 + 0)) or ((446 + 514)>=(245 + 4041))) then v219=nil;v220=nil;v216=421 -(416 + 3) ;end if ((v216==0) or ((641 -(171 + 99))>=1739)) then v217=0;v218=nil;v216=1 + 0 ;end end end elseif (((937 -(1284 -679))<(4582 -3436)) and (v85<=38)) then if (((5139 -(1236 + 93))==3810) and (v85==(30 + 7))) then local v222=0;local v223;while true do if (((1532 + 677)>=(4899 -(1760 + 1923))) and (v222==(0 + 0))) then v223=v84[6 -4 ];v82[v223](v13(v82,v223 + (2 -1) ,v68));break;end end else v82[v84[1 + 1 ]]=v82[v84[5 -2 ]];end elseif ((v85==(87 -(411 -(341 + 22)))) or (((965 -(800 + 31)) + 392)==(633 + 1914))) then local v226=0 -0 ;local v227;local v228;while true do if ((3999>=(3673 -(683 + (2078 -(1504 + 8))))) and (v226==(0 + 0))) then v227=0 -0 ;v228=nil;v226=1 + 0 ;end if ((v226==(1 + 0)) or ((13324 -9477)<=(2961 -(247 + 184)))) then while true do if ((((24563 -17570) -4329)>((1316 -485) -(19 + 17 + 327))) and (v227==0)) then v228=v84[2 + 0 ];v82[v228]=v82[v228](v13(v82,v228 + 1 + 0 ,v68));break;end end break;end end else v82[v84[3 -1 ]]=v82[v84[3]] + v82[v84[4 + 0 ]] ;end elseif ((1214<=3298) and (v85<=47)) then if ((v85<=(22 + 21)) or ((306 -(23 + 71))==(4191 -(257 + 169)))) then if (((86 + 768)<=(3207 -(1082 + 114))) and (v85<=(14 + 27))) then do return v82[v84[2]];end elseif (((4353 -(314 + 863))>=(787 + 1809)) and (v85==(99 -57))) then local v230=0 -0 ;local v231;local v232;while true do if ((v230==(1735 -(1128 + 606))) or ((345 + 512)<605)) then while true do if ((v231==((19 -(18 + 1)) + 0)) or (((5216 -(1189 + 161)) + 375)<(967 + 83))) then v232=v84[315 -(276 + 20 + 17) ];v82[v232]=v82[v232](v13(v82,v232 + 1 ,v84[(17 -10) -4 ]));break;end end break;end if ((0==v230) or ((3550 -(979 + 591))<((2361 -1240) -405))) then local v271=0 -0 ;while true do if (((3208 -(12 + 3))>(2604 -(185 + 202))) and (v271==(0 + 0))) then v231=0;v232=nil;v271=1;end if ((v271==((1557 -(1017 + 539)) + 0)) or ((4776 -(980 + 444))==377)) then v230=1 -0 ;break;end end end end else for v253=v84[(614 -(125 + 487)) + 0 ],v84[11 -8 ] do v82[v253]=nil;end end elseif (((6011 -3479)>1723) and (v85<=(2 + (1617 -(962 + 612))))) then if ((v85>((1977 -(971 + 916)) -46)) or ((1901 -1299)>=(2451 -((834 -(29 + 43)) + 866)))) then local v233=1758 -(672 + 1086) ;local v234;local v235;while true do if ((v233==0) or ((4474 -(38 + 208))<782)) then v234=0 -0 ;v235=nil;v233=1956 -(1005 + 950) ;end if ((v233==(931 -(660 + 270))) or ((47 + (2533 -(245 + 821)))<(1997 -(156 + 441)))) then while true do if ((v234==((1783 -(244 + 1539)) + 0)) or ((1936 -(48 + 421))>=(3162 -(52 + (2702 -1807))))) then v235=v84[(3 -1) + 0 ];do return v82[v235](v13(v82,v235 + (1035 -(856 + 178)) ,v84[2 + 1 ]));end break;end end break;end end else local v236=0 -0 ;local v237;local v238;while true do if ((v236==1) or ((1090 + 257)>=(323 + 2390))) then while true do if (((3311 -(158 + 130))>=(4138 -1238)) and (v237==((0 + 0) -0))) then v238=v82[v84[584 -(102 + 478) ]];if ( not v238 or ((5222 -((121 -(62 + 18)) + 1570))>=4192)) then v67=v67 + 1 + 0 ;else local v346=0 -0 ;while true do if ((v346==(0 + (610 -(246 + 364)))) or ((2272 -(13 + 55 + 15))==(2414 -(681 + 587)))) then v82[v84[2]]=v238;v67=v84[5 -2 ];break;end end end break;end end break;end if (((0 + 0)==v236) or ((1265 + 613)==(1831 -((1963 -(1262 + 605)) + 72)))) then v237=0;v238=nil;v236=1 + 0 ;end end end elseif (((632 + 2020)>762) and (v85>((20 + 90) -64))) then v37[v84[1095 -(919 + 173) ]]=v82[v84[2]];else v82[v84[1100 -(194 + 904) ]]= not v82[v84[3]];end elseif ((v85<=(720 -(434 + 236))) or ((3409 -(57 + 21))<(84 + (3011 -2354)))) then if (((4289 -(291 + 375))>=(1232 + 1979)) and (v85<=(20 + 28))) then v82[v84[7 -5 ]]=v82[v84[1476 -(756 + 717) ]]%v82[v84[5 -1 ]] ;elseif ((1227==1227) and (v85==(141 -92))) then local v242=0;local v243;local v244;while true do if ((((6818 -5141) + 3179)>=2086) and (v242==(2 -1))) then v82[v243 + 1 ]=v244;v82[v243]=v244[v84[9 -5 ]];break;end if ((v242==0) or ((12876 -8293)<1842)) then v243=v84[2 + 0 ];v244=v82[v84[3 + 0 + 0 ]];v242=1 + 0 + 0 ;end end else v82[v84[2]]=v82[v84[288 -(37 + 199 + 49) ]][v82[v84[1919 -(1344 + 571) ]]];end elseif ((v85<=(102 -50)) or ((3865 -(232 + 74))<(3513 -(898 + 787)))) then if ((v85>(917 -(279 + 587))) or ((3645 + 1176)<=(4882 -2595))) then if ((3962>=(3806 -(21 + 136))) and v82[v84[2]]) then v67=v67 + 1 ;else v67=v84[(1296 -735) -(31 + 527) ];end else v82[v84[2]]=v82[v84[3]] + v84[1 + 3 ] ;end elseif (((1628 -(281 + 765))<=((442 + 1985) -(109 + 1387))) and (v85>((1691 -(673 + 988)) + 23))) then local v248=0 -0 ;local v249;local v250;while true do if (((10619 -7094)<=(15844 -11436)) and (v248==(1 + 0))) then for v283=3 -2 , #v81 do local v284=0 + 0 ;local v285;local v286;while true do if ((2568>=(714 + 519)) and (v284==(1148 -(465 + 683)))) then local v345=0 -0 ;while true do if ((v345==0) or ((2862 + 1339)<=813)) then v285=0 -0 ;v286=nil;v345=1 + 0 ;end if (((15146 -10154)>=(1831 -940)) and ((4 -3)==v345)) then v284=1;break;end end end if ((v284==(2 -1)) or (1261==3209)) then while true do if (((1192 + 477)<=4957) and (v285==(0 -0))) then v286=v81[v283];for v384=0, #v286 do local v385=0 + (851 -(35 + 816)) ;local v386;local v387;local v388;local v389;while true do if ((v385==(525 -(439 + 84))) or ((6853 -2232)<=2415)) then while true do if (((2404 -(118 + 1131))<=(20428 -15460)) and (v386==1)) then v389=v387[948 -(25 + 921) ];if (((v388==v82) and (v389>=v249)) or (3210==1901)) then local v420=0 + 0 ;local v421;local v422;while true do if ((0==v420) or (1498>4466)) then v421=609 -(47 + 562) ;v422=nil;v420=1 + 0 ;end if ((v420==((1 + 0) -0)) or (2905<(4142 -(4529 -1702)))) then while true do if (((794 + 71)<=(3585 -(628 + 659))) and (v421==0)) then v422=0;while true do if ((v422==(0 + 0)) or (3702<=2420)) then v250[v389]=v388[v389];v387[956 -(180 + 775) ]=v250;break;end end break;end end break;end end end break;end if ((v386==(1335 -(796 + 539))) or ((5905 -3206)<(780 + 1730))) then v387=v286[v384];v388=v387[1250 -(35 + 1214) ];v386=1 + 0 ;end end break;end if (((530 -(85 + 175 + 269))==v385) or ((5086 -2558)==(5045 -1504))) then v388=nil;v389=nil;v385=863 -(160 + 701) ;end if (((4971 -(499 + 655))>=(103 + (1845 -(1062 + 382)))) and ((1346 -(1293 + 53))==v385)) then v386=0 -0 ;v387=nil;v385=1 + 0 ;end end end break;end end break;end end end break;end if ((v248==(0 + 0)) or ((4712 + 166)==(4186 -(49 + 1226)))) then v249=v84[1322 -(1247 + (230 -157)) ];v250={};v248=2 -1 ;end end else v82[v84[1380 -(337 + 1041) ]]=v37[v84[3]];end v67=v67 + 1 ;break;end end break;end end end end A,B=v32(v11(v71));if  not A[1] then local v95=v35[4][v67] or "?" ;error("Script error at ["   .. v95   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
